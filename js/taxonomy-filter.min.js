"use strict";class TaxonomyFilter{initEventHandlers(){const t=document.querySelector("#taxonomy-filter #submit");if(!t)throw new Error('Could not find button "#taxonomy-filter #submit"');const e=document.querySelector("#taxonomy-filter #reset");if(!e)throw new Error('Could not find button "#taxonomy-filter #reset"');t.addEventListener("click",t=>{t.preventDefault();let e=this.getCollectionPath();e=this.addFiltersToPath(e),window.location.href=e}),e.addEventListener("click",t=>{t.preventDefault();const e=this.getCollectionPath();window.location.href=e})}getCollectionPath(){return taxonomyFilters.blog}addFiltersToPath(t){const e=document.getElementById("taxonomy-filter"),o=new FormData(e),n={};for(const t of o.keys()){if(t.match(/(starts-after|ends-before)/))continue;const[e,o]=t.split("-");n[e]||(n[e]=""),n[e]+=n[e]?","+o:o}const r=o.get("starts-after"),i=o.get("ends-before");r&&(n["starts-after"]=r),i&&(n["ends-before"]=i);let s="";for(const t of Object.entries(n))s+=`/${t[0]}:${t[1]}`;return(t+s).replace(/\/\//g,"/")}}(new TaxonomyFilter).initEventHandlers();