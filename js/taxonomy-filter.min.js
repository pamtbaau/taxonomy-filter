"use strict";class TaxonomyFilter{initEventHandlers(){const e=document.querySelector("#taxonomy-filter #submit");if(!e)throw new Error('Could not find button "#taxonomy-filter #submit"');const t=document.querySelector("#taxonomy-filter #reset");if(!t)throw new Error('Could not find button "#taxonomy-filter #reset"');e.addEventListener("click",e=>{e.preventDefault();let t=taxonomyFilter.route;t=this.addFiltersToPath(t),window.location.href=t}),t.addEventListener("click",e=>{e.preventDefault();const t=taxonomyFilter.route;window.location.href=t})}addFiltersToPath(e){const t=document.getElementById("taxonomy-filter"),o=t.querySelectorAll("[taxon]"),r={};for(const e of o){if(!e.checked)continue;const t=e.getAttribute("taxon"),o=e.getAttribute("taxonvalue");r[t]||(r[t]=""),r[t]+=r[t]?","+o:o}const n=t.querySelector('input[name="operator"]:checked');n&&(r.operator=n.value);const l=t.querySelector("#starts-after"),a=t.querySelector("#ends-before");l&&""!==l.value&&(r["starts-after"]=l.value),a&&""!==a.value&&(r["ends-before"]=a.value);let i="";for(const e of Object.entries(r))i+=`/${e[0]}:${e[1]}`;return(e+i).replace(/\/\//g,"/")}}(new TaxonomyFilter).initEventHandlers();