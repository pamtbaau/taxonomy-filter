"use strict";class TaxonomyFilter{initEventHandlers(){const t=document.querySelector("#taxonomy-filter #submit");if(!t)throw new Error('Could not find button "#taxonomy-filter #submit"');const e=document.querySelector("#taxonomy-filter #reset");if(!e)throw new Error('Could not find button "#taxonomy-filter #reset"');t.addEventListener("click",t=>{t.preventDefault();let e=this.getCollectionPath();e=this.addFiltersToPath(e),window.location.href=e}),e.addEventListener("click",t=>{t.preventDefault();const e=this.getCollectionPath();window.location.href=e})}getCollectionPath(){return taxonomyFilters.blog}addFiltersToPath(t){const e=document.getElementById("taxonomy-filter"),o=e.querySelectorAll("[taxon]"),n={};for(const t of o){if(!t.checked)continue;const e=t.getAttribute("taxon"),o=t.getAttribute("taxonvalue");n[e]||(n[e]=""),n[e]+=n[e]?","+o:o}const r=e.querySelector("#starts-after"),l=e.querySelector("#ends-before");r&&""!==r.value&&(n["starts-after"]=r.value),l&&""!==l.value&&(n["ends-before"]=l.value);let i="";for(const t of Object.entries(n))i+=`/${t[0]}:${t[1]}`;return(t+i).replace(/\/\//g,"/")}}(new TaxonomyFilter).initEventHandlers();